{
  "swagger": "2.0",
  "info": {
    "description": "This is a comprehensive e-commerce API with 40 endpoints for testing purposes. It includes various operations for products, users, orders, and more.",
    "version": "1.0.0",
    "title": "E-Commerce Test API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "api@ecommerce.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "api.ecommerce.com",
  "basePath": "/v2",
  "tags": [
    {
      "name": "auth",
      "description": "Authentication operations"
    },
    {
      "name": "user",
      "description": "User management"
    },
    {
      "name": "product",
      "description": "Product catalog"
    },
    {
      "name": "category",
      "description": "Product categories"
    },
    {
      "name": "order",
      "description": "Order operations"
    },
    {
      "name": "cart",
      "description": "Shopping cart"
    },
    {
      "name": "payment",
      "description": "Payment processing"
    },
    {
      "name": "review",
      "description": "Product reviews"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register new user",
        "operationId": "registerUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Registration data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login user",
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful logout"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get all users",
        "operationId": "getUsers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": ["user"],
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["user"],
        "summary": "Update user",
        "operationId": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{userId}/profile": {
      "get": {
        "tags": ["user"],
        "summary": "Get user profile",
        "operationId": "getUserProfile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product": {
      "get": {
        "tags": ["product"],
        "summary": "Get all products",
        "operationId": "getProducts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "minPrice",
            "in": "query",
            "type": "number"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["product"],
        "summary": "Create product",
        "operationId": "createProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/{productId}": {
      "get": {
        "tags": ["product"],
        "summary": "Get product by ID",
        "operationId": "getProductById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": ["product"],
        "summary": "Update product",
        "operationId": "updateProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["product"],
        "summary": "Delete product",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/{productId}/images": {
      "post": {
        "tags": ["product"],
        "summary": "Upload product image",
        "operationId": "uploadProductImage",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Image file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Image uploaded",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/search": {
      "post": {
        "tags": ["product"],
        "summary": "Advanced product search",
        "operationId": "searchProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      }
    },
    "/product/featured": {
      "get": {
        "tags": ["product"],
        "summary": "Get featured products",
        "operationId": "getFeaturedProducts",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Featured products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      }
    },
    "/category": {
      "get": {
        "tags": ["category"],
        "summary": "Get all categories",
        "operationId": "getCategories",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "List of categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["category"],
        "summary": "Create category",
        "operationId": "createCategory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category/{categoryId}": {
      "get": {
        "tags": ["category"],
        "summary": "Get category by ID",
        "operationId": "getCategoryById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "tags": ["category"],
        "summary": "Delete category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/order": {
      "get": {
        "tags": ["order"],
        "summary": "Get user orders",
        "operationId": "getOrders",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "enum": ["pending", "processing", "shipped", "delivered", "cancelled"]
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["order"],
        "summary": "Create order",
        "operationId": "createOrder",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": ["order"],
        "summary": "Get order by ID",
        "operationId": "getOrderById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": ["order"],
        "summary": "Update order status",
        "operationId": "updateOrderStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["pending", "processing", "shipped", "delivered", "cancelled"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/order/{orderId}/cancel": {
      "post": {
        "tags": ["order"],
        "summary": "Cancel order",
        "operationId": "cancelOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/order/{orderId}/items": {
      "get": {
        "tags": ["order"],
        "summary": "Get order items",
        "operationId": "getOrderItems",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Order items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cart": {
      "get": {
        "tags": ["cart"],
        "summary": "Get cart contents",
        "operationId": "getCart",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Cart contents",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["cart"],
        "summary": "Clear cart",
        "operationId": "clearCart",
        "responses": {
          "204": {
            "description": "Cart cleared"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cart/items": {
      "post": {
        "tags": ["cart"],
        "summary": "Add item to cart",
        "operationId": "addToCart",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartItemAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item added",
            "schema": {
              "$ref": "#/definitions/CartItem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cart/items/{itemId}": {
      "put": {
        "tags": ["cart"],
        "summary": "Update cart item",
        "operationId": "updateCartItem",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["cart"],
        "summary": "Remove item from cart",
        "operationId": "removeFromCart",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Item removed"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment/methods": {
      "get": {
        "tags": ["payment"],
        "summary": "Get payment methods",
        "operationId": "getPaymentMethods",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Payment methods",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethod"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["payment"],
        "summary": "Add payment method",
        "operationId": "addPaymentMethod",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethodAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Payment method added",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment/process": {
      "post": {
        "tags": ["payment"],
        "summary": "Process payment",
        "operationId": "processPayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentProcess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment processed",
            "schema": {
              "$ref": "#/definitions/PaymentResult"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment/{paymentId}": {
      "get": {
        "tags": ["payment"],
        "summary": "Get payment details",
        "operationId": "getPaymentById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/{productId}/reviews": {
      "get": {
        "tags": ["review"],
        "summary": "Get product reviews",
        "operationId": "getProductReviews",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rating",
            "in": "query",
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Product reviews",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Review"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["review"],
        "summary": "Add product review",
        "operationId": "addProductReview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review added",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/review/{reviewId}": {
      "put": {
        "tags": ["review"],
        "summary": "Update review",
        "operationId": "updateReview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review updated",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["review"],
        "summary": "Delete review",
        "operationId": "deleteReview",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Review deleted"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme"
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "object"
        }
      }
    },
    "UserRegistration": {
      "type": "object",
      "required": [
        "email",
        "password",
        "firstName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "minLength": 8
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["customer", "admin"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserCreate": {
      "type": "object",
      "required": [
        "email",
        "password",
        "firstName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["customer", "admin"]
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "UserProfile": {
      "type": "object",
      "properties": {
        "bio": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "preferences": {
          "type": "object"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "compareAtPrice": {
          "type": "number",
          "format": "double"
        },
        "sku": {
          "type": "string"
        },
        "barcode": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "inStock": {
          "type": "boolean"
        },
        "stockQuantity": {
          "type": "integer"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rating": {
          "type": "number",
          "format": "float"
        },
        "reviewCount": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProductCreate": {
      "type": "object",
      "required": [
        "name",
        "description",
        "price",
        "categoryId"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "compareAtPrice": {
          "type": "number"
        },
        "sku": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "stockQuantity": {
          "type": "integer"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProductUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "compareAtPrice": {
          "type": "number"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "stockQuantity": {
          "type": "integer"
        }
      }
    },
    "ProductSearchRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "priceRange": {
          "type": "object",
          "properties": {
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            }
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inStock": {
          "type": "boolean"
        },
        "sortBy": {
          "type": "string",
          "enum": ["price", "name", "rating", "created"]
        },
        "sortOrder": {
          "type": "string",
          "enum": ["asc", "desc"]
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "alt": {
          "type": "string"
        },
        "isPrimary": {
          "type": "boolean"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "CategoryCreate": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "type": "string"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "totalAmount": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "processing", "shipped", "delivered", "cancelled"]
        },
        "shippingAddress": {
          "$ref": "#/definitions/Address"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address"
        },
        "paymentMethod": {
          "type": "string"
        },
        "paymentStatus": {
          "type": "string",
          "enum": ["pending", "paid", "failed", "refunded"]
        },
        "trackingNumber": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrderCreate": {
      "type": "object",
      "required": [
        "shippingAddressId",
        "paymentMethodId"
      ],
      "properties": {
        "shippingAddressId": {
          "type": "string"
        },
        "billingAddressId": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "productImage": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer"
        },
        "subtotal": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartItem"
          }
        },
        "subtotal": {
          "type": "number",
          "format": "double"
        },
        "tax": {
          "type": "number",
          "format": "double"
        },
        "shipping": {
          "type": "number",
          "format": "double"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "total": {
          "type": "number",
          "format": "double"
        },
        "couponCode": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CartItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "productImage": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer"
        },
        "subtotal": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CartItemAdd": {
      "type": "object",
      "required": [
        "productId",
        "quantity"
      ],
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "PaymentMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["card", "paypal", "bank_transfer"]
        },
        "lastFourDigits": {
          "type": "string"
        },
        "expiryMonth": {
          "type": "integer"
        },
        "expiryYear": {
          "type": "integer"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "PaymentMethodAdd": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["card", "paypal", "bank_transfer"]
        },
        "cardNumber": {
          "type": "string"
        },
        "expiryMonth": {
          "type": "integer"
        },
        "expiryYear": {
          "type": "integer"
        },
        "cvv": {
          "type": "string"
        },
        "holderName": {
          "type": "string"
        }
      }
    },
    "PaymentProcess": {
      "type": "object",
      "required": [
        "orderId",
        "paymentMethodId",
        "amount"
      ],
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMethodId": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PaymentResult": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "transactionId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "processing", "succeeded", "failed", "refunded"]
        },
        "method": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5
        },
        "title": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "helpfulCount": {
          "type": "integer"
        },
        "verified": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReviewCreate": {
      "type": "object",
      "required": [
        "rating",
        "title",
        "comment"
      ],
      "properties": {
        "rating": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5
        },
        "title": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "ReviewUpdate": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5
        },
        "title": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about this API",
    "url": "http://swagger.io"
  }
}