{
  "swagger": "2.0",
  "info": {
    "description": "E-commerce API for testing purposes. This API is deployed and working at https://ecommerce-api-test-9h3n.onrender.com",
    "version": "2.0",
    "title": "E-Commerce Test API",
    "contact": {
      "email": "api@ecommerce.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "ecommerce-api-test-9h3n.onrender.com",
  "basePath": "/v2",
  "tags": [
    {
      "name": "auth",
      "description": "Authentication operations"
    },
    {
      "name": "user",
      "description": "User management"
    },
    {
      "name": "product",
      "description": "Product catalog"
    },
    {
      "name": "category",
      "description": "Product categories"
    },
    {
      "name": "order",
      "description": "Order operations"
    },
    {
      "name": "cart",
      "description": "Shopping cart"
    },
    {
      "name": "payment",
      "description": "Payment processing"
    },
    {
      "name": "review",
      "description": "Product reviews"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register new user",
        "operationId": "registerUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Registration data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Bad request - missing fields or user already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login user",
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Logged out successfully"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get all users",
        "operationId": "getUsers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": ["user"],
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["user"],
        "summary": "Update user",
        "operationId": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product": {
      "get": {
        "tags": ["product"],
        "summary": "Get all products",
        "operationId": "getProducts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category",
            "type": "string"
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Minimum price",
            "type": "number"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Maximum price",
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in name and description",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["product"],
        "summary": "Create product",
        "operationId": "createProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/{productId}": {
      "get": {
        "tags": ["product"],
        "summary": "Get product by ID",
        "operationId": "getProductById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["product"],
        "summary": "Update product",
        "operationId": "updateProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["product"],
        "summary": "Delete product",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product/{productId}/reviews": {
      "get": {
        "tags": ["review"],
        "summary": "Get product reviews",
        "operationId": "getProductReviews",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rating",
            "in": "query",
            "description": "Filter by rating (1-5)",
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Product reviews",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Review"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["review"],
        "summary": "Add product review",
        "operationId": "addProductReview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review added",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category": {
      "get": {
        "tags": ["category"],
        "summary": "Get all categories",
        "operationId": "getCategories",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "List of categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["category"],
        "summary": "Create category",
        "operationId": "createCategory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category/{categoryId}": {
      "get": {
        "tags": ["category"],
        "summary": "Get category by ID",
        "operationId": "getCategoryById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cart": {
      "get": {
        "tags": ["cart"],
        "summary": "Get cart contents",
        "operationId": "getCart",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Cart contents",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["cart"],
        "summary": "Clear cart",
        "operationId": "clearCart",
        "responses": {
          "204": {
            "description": "Cart cleared"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cart/items": {
      "post": {
        "tags": ["cart"],
        "summary": "Add item to cart",
        "operationId": "addToCart",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartItemAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item added",
            "schema": {
              "$ref": "#/definitions/CartItem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/order": {
      "get": {
        "tags": ["order"],
        "summary": "Get user orders",
        "operationId": "getOrders",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "type": "string",
            "enum": ["pending", "processing", "shipped", "delivered", "cancelled"]
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["order"],
        "summary": "Create order from cart",
        "operationId": "createOrder",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Cart is empty",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": ["order"],
        "summary": "Get order by ID",
        "operationId": "getOrderById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment/process": {
      "post": {
        "tags": ["payment"],
        "summary": "Process payment",
        "operationId": "processPayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentProcess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment processed",
            "schema": {
              "$ref": "#/definitions/PaymentResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: 'Bearer token_123456'"
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "UserRegistration": {
      "type": "object",
      "required": [
        "email",
        "password",
        "firstName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "test@example.com"
        },
        "password": {
          "type": "string",
          "minLength": 6,
          "example": "password123"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "phone": {
          "type": "string",
          "example": "+1234567890"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "test@example.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "example": "token_1234567890"
        },
        "refreshToken": {
          "type": "string",
          "example": "refresh_1234567890"
        },
        "expiresIn": {
          "type": "integer",
          "example": 3600
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1234567890
        },
        "email": {
          "type": "string",
          "example": "test@example.com"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "phone": {
          "type": "string",
          "example": "+1234567890"
        },
        "role": {
          "type": "string",
          "enum": ["customer", "admin"],
          "example": "customer"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2024-01-01T12:00:00Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserCreate": {
      "type": "object",
      "required": [
        "email",
        "password",
        "firstName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["customer", "admin"],
          "default": "customer"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1"
        },
        "name": {
          "type": "string",
          "example": "iPhone 15 Pro"
        },
        "description": {
          "type": "string",
          "example": "Latest Apple smartphone"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 999.99
        },
        "category": {
          "type": "string",
          "example": "Electronics"
        },
        "inStock": {
          "type": "boolean",
          "example": true
        },
        "stockQuantity": {
          "type": "integer",
          "example": 50
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProductCreate": {
      "type": "object",
      "required": [
        "name",
        "description",
        "price",
        "category"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "category": {
          "type": "string"
        },
        "stockQuantity": {
          "type": "integer"
        }
      }
    },
    "ProductUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "category": {
          "type": "string"
        },
        "stockQuantity": {
          "type": "integer"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CategoryCreate": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartItem"
          }
        },
        "subtotal": {
          "type": "number",
          "format": "double"
        },
        "tax": {
          "type": "number",
          "format": "double"
        },
        "total": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CartItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "CartItemAdd": {
      "type": "object",
      "required": [
        "productId",
        "quantity"
      ],
      "properties": {
        "productId": {
          "type": "string",
          "example": "1"
        },
        "quantity": {
          "type": "integer",
          "minimum": 1,
          "example": 2
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartItem"
          }
        },
        "totalAmount": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "processing", "shipped", "delivered", "cancelled"]
        },
        "shippingAddressId": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrderCreate": {
      "type": "object",
      "properties": {
        "shippingAddressId": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "rating": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5
        },
        "title": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReviewCreate": {
      "type": "object",
      "required": [
        "rating",
        "title",
        "comment"
      ],
      "properties": {
        "rating": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5,
          "example": 5
        },
        "title": {
          "type": "string",
          "example": "Great product!"
        },
        "comment": {
          "type": "string",
          "example": "Very satisfied with this purchase"
        }
      }
    },
    "PaymentProcess": {
      "type": "object",
      "required": [
        "orderId",
        "amount"
      ],
      "properties": {
        "orderId": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "paymentMethodId": {
          "type": "string"
        }
      }
    },
    "PaymentResult": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "transactionId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}